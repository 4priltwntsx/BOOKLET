server:
  port: 8001
  ssl:
    enabled: true
    key-store: classpath:keystore.p12
    key-store-password: qnrwjrqnrwjr
    key-store-type: PKCS12
    key-alias: bns-ssl


eureka:
  eureka:
    instance:
      prefer-ip-address: true
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://j8b306.p.ssafy.io:8761/eureka #http://localhost:8761/eureka
spring:
  # profiles: default
  application:
    name: apigateway-service
  cloud:
    gateway:
      httpclient:
        ssl:
          use-insecure-trust-manager: true
      default-filters:
        - name: GlobalFilter
          args:
            baseMessage: Spring Cloud Gateway Global Filter
            preLogger: true
            postLogger: true
        - DedupeResponseHeader=Access-Control-Allow-Origin Access-Control-Allow-Credentials
      globalcors:
        cors-configurations:
          '[/**]':
            allowedOrigins: "http://localhost:3000"
            allow-credentials: true   #추가
            allowedHeaders: "*"
            allowedMethods: "*"
      routes:
        - id: booklet-user-service
          uri: lb://USER-SERVICE # user-service의 namef
          predicates:
            - Path=/api/*/auth/**
#          filters:
#            - CustomFilter
        - id: booklet-paragraph-service
          uri: lb://PARAGRAPH-SERVICE # paragraph-service의 name
          predicates:
            - Path=/api/v1/sns/**
#          filters:
#            - CustomFilter
        - id: booklet-book-service
          uri: lb://BOOK-SERVICE # book-service의 name
          predicates:
            - Path=/api/v1/book/**,/api/v1/review
#          filters:
#            - CustomFilter
        - id: booklet-recommand-service
          uri: lb://RECOMMAND-SERVICE # recom-service의 name
          predicates:
            - Path=/api/v1/recom/**
#          filters:
#            - CustomFilter

